from flask import Flask, request, jsonify

app = Flask(__name__)

users = []
performance_data = []
articles = []
classification_settings = {}
sources = []
algorithms = []
sentiment_data = []
reports = []
notifications = []
statistics = []

def manage_users(data):
    users.append(data)
    return {'message': 'User account created successfully', 'users': users}

def monitor_performance(data):
    performance_data.append(data)
    return {'message': 'Performance data added successfully', 'performance_data': performance_data}

def moderate_articles(data):
    articles.append(data)
    return {'message': 'Article moderated successfully', 'articles': articles}

def update_classification_settings(data):
    global classification_settings
    classification_settings.update(data)
    return {'message': 'Classification settings updated successfully', 'classification_settings': classification_settings}

def manage_sources(data):
    sources.append(data)
    return {'message': 'News source added successfully', 'sources': sources}

def adjust_algorithms(data):
    algorithms.append(data)
    return {'message': 'Algorithm adjusted successfully', 'algorithms': algorithms}

def sentiment_performance(data):
    sentiment_data.append(data)
    return {'message': 'Sentiment data added successfully', 'sentiment_data': sentiment_data}

def generate_reports(data):
    reports.append(data)
    return {'message': 'Report generated successfully', 'reports': reports}

def admin_notifications(data):
    notifications.append(data)
    return {'message': 'Notification created successfully', 'notifications': notifications}

def usage_statistics(data):
    statistics.append(data)
    return {'message': 'Statistics added successfully', 'statistics': statistics}

# Example manual call to each function:
if __name__ == '__main__':
    example_user = {'name': 'John Doe', 'role': 'admin'}
    print(manage_users(example_user))

    example_performance = {'metric': 'uptime', 'value': '99%'}
    print(monitor_performance(example_performance))

    example_article = {'title': 'Sample Article', 'status': 'flagged'}
    print(moderate_articles(example_article))

    example_settings = {'category': 'technology', 'priority': 'high'}
    print(update_classification_settings(example_settings))

    example_source = {'name': 'Tech News', 'url': 'https://technews.com'}
    print(manage_sources(example_source))

    example_algorithm = {'name': 'Preference AI', 'version': '1.2'}
    print(adjust_algorithms(example_algorithm))

    example_sentiment = {'accuracy': '95%', 'processed': 1000}
    print(sentiment_performance(example_sentiment))

    example_report = {'type': 'trends', 'content': 'News trends of the week'}
    print(generate_reports(example_report))

    example_notification = {'event': 'System Update', 'message': 'Update successful'}
    print(admin_notifications(example_notification))

    example_statistic = {'users_online': 120, 'articles_read': 500}
    print(usage_statistics(example_statistic))
